import * as util from './util/';
import { IApproximateTextMatch } from './util/textUtil';
export { IApproximateTextMatch };
/**
 * Util module encapsulating various utility methods, classes, etc.
 *
 * ```javascript
 * import { Util } from '@oracle/bots-node-sdk';
 * // or
 * import * as Util from '@oracle/bots-node-sdk/util';
 * ```
 */
export declare namespace Util {
    /**
     * MessageModel is a set of utility functions to help deriving string or speech representation
     * of a CMM (Conversation Message Model) message.  This is used primarily to output text or speech to
     * voice and text-based channels like Alexa and SMS.
     * @alias `messageModelUtil`
     */
    const MessageModel: {
        cardToText: typeof import("./util/messageModelUtil").cardToText;
        convertRespToText: typeof import("./util/messageModelUtil").convertRespToText;
    };
    export import messageModelUtil = util.messageModelUtil;
    /**
     * Webhook is a set of utility functions for bot integration via webhook channel.
     * @alias `webhookUtil`
     */
    const Webhook: {
        messageToBot: typeof import("./util/webhookUtil").messageToBot;
        messageToBotWithProperties: typeof import("./util/webhookUtil").messageToBotWithProperties;
        verifyMessageFromBot: typeof import("./util/webhookUtil").verifyMessageFromBot;
        bodyParserRawMessageVerify: typeof import("./util/webhookUtil").bodyParserRawMessageVerify;
        buildSignatureHeader: (buf: any, secret: any, encoding?: any) => string;
    };
    export import webhookUtil = util.webhookUtil;
    /**
     * Text is a set of text-based utiltiies for bot message processing.
     * @alias `textUtil`
     */
    const Text: {
        approxTextMatch: typeof import("./util/textUtil").approxTextMatch;
    };
    export import textUtil = util.textUtil;
}
